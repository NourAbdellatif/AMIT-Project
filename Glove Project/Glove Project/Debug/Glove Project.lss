
Glove Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000044  00800060  000009ba  00000a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  008000a4  008000a4  00000a92  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ac4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ca2  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fc  00000000  00000000  000028e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e5d  00000000  00000000  000031de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b0  00000000  00000000  0000403c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000063e  00000000  00000000  000042ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012cf  00000000  00000000  0000492a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00005bf9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
   4:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
   8:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
   c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  28:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  2c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  34:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  40:	0c 94 00 01 	jmp	0x200	; 0x200 <__vector_16>
  44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  48:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  54:	78 00       	.word	0x0078	; ????
  56:	88 00       	.word	0x0088	; ????
  58:	98 00       	.word	0x0098	; ????
  5a:	a8 00       	.word	0x00a8	; ????
  5c:	b8 00       	.word	0x00b8	; ????
  5e:	c8 00       	.word	0x00c8	; ????
  60:	d8 00       	.word	0x00d8	; ????
  62:	e8 00       	.word	0x00e8	; ????

00000064 <__ctors_end>:
  64:	11 24       	eor	r1, r1
  66:	1f be       	out	0x3f, r1	; 63
  68:	cf e5       	ldi	r28, 0x5F	; 95
  6a:	d8 e0       	ldi	r29, 0x08	; 8
  6c:	de bf       	out	0x3e, r29	; 62
  6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_copy_data>:
  70:	10 e0       	ldi	r17, 0x00	; 0
  72:	a0 e6       	ldi	r26, 0x60	; 96
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	ea eb       	ldi	r30, 0xBA	; 186
  78:	f9 e0       	ldi	r31, 0x09	; 9
  7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
  7c:	05 90       	lpm	r0, Z+
  7e:	0d 92       	st	X+, r0
  80:	a4 3a       	cpi	r26, 0xA4	; 164
  82:	b1 07       	cpc	r27, r17
  84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>

00000086 <__do_clear_bss>:
  86:	20 e0       	ldi	r18, 0x00	; 0
  88:	a4 ea       	ldi	r26, 0xA4	; 164
  8a:	b0 e0       	ldi	r27, 0x00	; 0
  8c:	01 c0       	rjmp	.+2      	; 0x90 <.do_clear_bss_start>

0000008e <.do_clear_bss_loop>:
  8e:	1d 92       	st	X+, r1

00000090 <.do_clear_bss_start>:
  90:	a6 3a       	cpi	r26, 0xA6	; 166
  92:	b2 07       	cpc	r27, r18
  94:	e1 f7       	brne	.-8      	; 0x8e <.do_clear_bss_loop>
  96:	0e 94 da 02 	call	0x5b4	; 0x5b4 <main>
  9a:	0c 94 db 04 	jmp	0x9b6	; 0x9b6 <_exit>

0000009e <__bad_interrupt>:
  9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <ADC_voidInit>:
	
}

void		ADC_voidSetCallBack(void (*Copy_Pf)(void))
{
	ADC_CallBack = Copy_Pf;
  a2:	87 b1       	in	r24, 0x07	; 7
  a4:	80 64       	ori	r24, 0x40	; 64
  a6:	87 b9       	out	0x07, r24	; 7
  a8:	87 b1       	in	r24, 0x07	; 7
  aa:	8f 77       	andi	r24, 0x7F	; 127
  ac:	87 b9       	out	0x07, r24	; 7
  ae:	86 b1       	in	r24, 0x06	; 6
  b0:	81 60       	ori	r24, 0x01	; 1
  b2:	86 b9       	out	0x06, r24	; 6
  b4:	86 b1       	in	r24, 0x06	; 6
  b6:	82 60       	ori	r24, 0x02	; 2
  b8:	86 b9       	out	0x06, r24	; 6
  ba:	86 b1       	in	r24, 0x06	; 6
  bc:	84 60       	ori	r24, 0x04	; 4
  be:	86 b9       	out	0x06, r24	; 6
  c0:	86 b1       	in	r24, 0x06	; 6
  c2:	8f 77       	andi	r24, 0x7F	; 127
  c4:	86 b9       	out	0x06, r24	; 6
  c6:	86 b1       	in	r24, 0x06	; 6
  c8:	87 7f       	andi	r24, 0xF7	; 247
  ca:	86 b9       	out	0x06, r24	; 6
  cc:	86 b1       	in	r24, 0x06	; 6
  ce:	80 61       	ori	r24, 0x10	; 16
  d0:	86 b9       	out	0x06, r24	; 6
  d2:	08 95       	ret

000000d4 <ADC_voidEnable>:
  d4:	86 b1       	in	r24, 0x06	; 6
  d6:	80 68       	ori	r24, 0x80	; 128
  d8:	86 b9       	out	0x06, r24	; 6
  da:	08 95       	ret

000000dc <ADC_voidSetChannel>:
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	88 30       	cpi	r24, 0x08	; 8
  e0:	91 05       	cpc	r25, r1
  e2:	08 f0       	brcs	.+2      	; 0xe6 <ADC_voidSetChannel+0xa>
  e4:	84 c0       	rjmp	.+264    	; 0x1ee <ADC_voidSetChannel+0x112>
  e6:	fc 01       	movw	r30, r24
  e8:	e6 5d       	subi	r30, 0xD6	; 214
  ea:	ff 4f       	sbci	r31, 0xFF	; 255
  ec:	0c 94 c6 04 	jmp	0x98c	; 0x98c <__tablejump2__>
  f0:	87 b1       	in	r24, 0x07	; 7
  f2:	8e 7f       	andi	r24, 0xFE	; 254
  f4:	87 b9       	out	0x07, r24	; 7
  f6:	87 b1       	in	r24, 0x07	; 7
  f8:	8d 7f       	andi	r24, 0xFD	; 253
  fa:	87 b9       	out	0x07, r24	; 7
  fc:	87 b1       	in	r24, 0x07	; 7
  fe:	8b 7f       	andi	r24, 0xFB	; 251
 100:	87 b9       	out	0x07, r24	; 7
 102:	87 b1       	in	r24, 0x07	; 7
 104:	87 7f       	andi	r24, 0xF7	; 247
 106:	87 b9       	out	0x07, r24	; 7
 108:	87 b1       	in	r24, 0x07	; 7
 10a:	8f 7e       	andi	r24, 0xEF	; 239
 10c:	87 b9       	out	0x07, r24	; 7
 10e:	08 95       	ret
 110:	87 b1       	in	r24, 0x07	; 7
 112:	81 60       	ori	r24, 0x01	; 1
 114:	87 b9       	out	0x07, r24	; 7
 116:	87 b1       	in	r24, 0x07	; 7
 118:	8d 7f       	andi	r24, 0xFD	; 253
 11a:	87 b9       	out	0x07, r24	; 7
 11c:	87 b1       	in	r24, 0x07	; 7
 11e:	8b 7f       	andi	r24, 0xFB	; 251
 120:	87 b9       	out	0x07, r24	; 7
 122:	87 b1       	in	r24, 0x07	; 7
 124:	87 7f       	andi	r24, 0xF7	; 247
 126:	87 b9       	out	0x07, r24	; 7
 128:	87 b1       	in	r24, 0x07	; 7
 12a:	8f 7e       	andi	r24, 0xEF	; 239
 12c:	87 b9       	out	0x07, r24	; 7
 12e:	08 95       	ret
 130:	87 b1       	in	r24, 0x07	; 7
 132:	8e 7f       	andi	r24, 0xFE	; 254
 134:	87 b9       	out	0x07, r24	; 7
 136:	87 b1       	in	r24, 0x07	; 7
 138:	82 60       	ori	r24, 0x02	; 2
 13a:	87 b9       	out	0x07, r24	; 7
 13c:	87 b1       	in	r24, 0x07	; 7
 13e:	8b 7f       	andi	r24, 0xFB	; 251
 140:	87 b9       	out	0x07, r24	; 7
 142:	87 b1       	in	r24, 0x07	; 7
 144:	87 7f       	andi	r24, 0xF7	; 247
 146:	87 b9       	out	0x07, r24	; 7
 148:	87 b1       	in	r24, 0x07	; 7
 14a:	8f 7e       	andi	r24, 0xEF	; 239
 14c:	87 b9       	out	0x07, r24	; 7
 14e:	08 95       	ret
 150:	87 b1       	in	r24, 0x07	; 7
 152:	81 60       	ori	r24, 0x01	; 1
 154:	87 b9       	out	0x07, r24	; 7
 156:	87 b1       	in	r24, 0x07	; 7
 158:	82 60       	ori	r24, 0x02	; 2
 15a:	87 b9       	out	0x07, r24	; 7
 15c:	87 b1       	in	r24, 0x07	; 7
 15e:	8b 7f       	andi	r24, 0xFB	; 251
 160:	87 b9       	out	0x07, r24	; 7
 162:	87 b1       	in	r24, 0x07	; 7
 164:	87 7f       	andi	r24, 0xF7	; 247
 166:	87 b9       	out	0x07, r24	; 7
 168:	87 b1       	in	r24, 0x07	; 7
 16a:	8f 7e       	andi	r24, 0xEF	; 239
 16c:	87 b9       	out	0x07, r24	; 7
 16e:	08 95       	ret
 170:	87 b1       	in	r24, 0x07	; 7
 172:	8e 7f       	andi	r24, 0xFE	; 254
 174:	87 b9       	out	0x07, r24	; 7
 176:	87 b1       	in	r24, 0x07	; 7
 178:	8d 7f       	andi	r24, 0xFD	; 253
 17a:	87 b9       	out	0x07, r24	; 7
 17c:	87 b1       	in	r24, 0x07	; 7
 17e:	84 60       	ori	r24, 0x04	; 4
 180:	87 b9       	out	0x07, r24	; 7
 182:	87 b1       	in	r24, 0x07	; 7
 184:	87 7f       	andi	r24, 0xF7	; 247
 186:	87 b9       	out	0x07, r24	; 7
 188:	87 b1       	in	r24, 0x07	; 7
 18a:	8f 7e       	andi	r24, 0xEF	; 239
 18c:	87 b9       	out	0x07, r24	; 7
 18e:	08 95       	ret
 190:	87 b1       	in	r24, 0x07	; 7
 192:	81 60       	ori	r24, 0x01	; 1
 194:	87 b9       	out	0x07, r24	; 7
 196:	87 b1       	in	r24, 0x07	; 7
 198:	8d 7f       	andi	r24, 0xFD	; 253
 19a:	87 b9       	out	0x07, r24	; 7
 19c:	87 b1       	in	r24, 0x07	; 7
 19e:	84 60       	ori	r24, 0x04	; 4
 1a0:	87 b9       	out	0x07, r24	; 7
 1a2:	87 b1       	in	r24, 0x07	; 7
 1a4:	87 7f       	andi	r24, 0xF7	; 247
 1a6:	87 b9       	out	0x07, r24	; 7
 1a8:	87 b1       	in	r24, 0x07	; 7
 1aa:	8f 7e       	andi	r24, 0xEF	; 239
 1ac:	87 b9       	out	0x07, r24	; 7
 1ae:	08 95       	ret
 1b0:	87 b1       	in	r24, 0x07	; 7
 1b2:	8e 7f       	andi	r24, 0xFE	; 254
 1b4:	87 b9       	out	0x07, r24	; 7
 1b6:	87 b1       	in	r24, 0x07	; 7
 1b8:	82 60       	ori	r24, 0x02	; 2
 1ba:	87 b9       	out	0x07, r24	; 7
 1bc:	87 b1       	in	r24, 0x07	; 7
 1be:	84 60       	ori	r24, 0x04	; 4
 1c0:	87 b9       	out	0x07, r24	; 7
 1c2:	87 b1       	in	r24, 0x07	; 7
 1c4:	87 7f       	andi	r24, 0xF7	; 247
 1c6:	87 b9       	out	0x07, r24	; 7
 1c8:	87 b1       	in	r24, 0x07	; 7
 1ca:	8f 7e       	andi	r24, 0xEF	; 239
 1cc:	87 b9       	out	0x07, r24	; 7
 1ce:	08 95       	ret
 1d0:	87 b1       	in	r24, 0x07	; 7
 1d2:	81 60       	ori	r24, 0x01	; 1
 1d4:	87 b9       	out	0x07, r24	; 7
 1d6:	87 b1       	in	r24, 0x07	; 7
 1d8:	82 60       	ori	r24, 0x02	; 2
 1da:	87 b9       	out	0x07, r24	; 7
 1dc:	87 b1       	in	r24, 0x07	; 7
 1de:	84 60       	ori	r24, 0x04	; 4
 1e0:	87 b9       	out	0x07, r24	; 7
 1e2:	87 b1       	in	r24, 0x07	; 7
 1e4:	87 7f       	andi	r24, 0xF7	; 247
 1e6:	87 b9       	out	0x07, r24	; 7
 1e8:	87 b1       	in	r24, 0x07	; 7
 1ea:	8f 7e       	andi	r24, 0xEF	; 239
 1ec:	87 b9       	out	0x07, r24	; 7
 1ee:	08 95       	ret

000001f0 <ADC_u16ReadValue>:
 1f0:	86 b1       	in	r24, 0x06	; 6
 1f2:	80 64       	ori	r24, 0x40	; 64
 1f4:	86 b9       	out	0x06, r24	; 6
 1f6:	34 9b       	sbis	0x06, 4	; 6
 1f8:	fe cf       	rjmp	.-4      	; 0x1f6 <ADC_u16ReadValue+0x6>
 1fa:	84 b1       	in	r24, 0x04	; 4
 1fc:	95 b1       	in	r25, 0x05	; 5
 1fe:	08 95       	ret

00000200 <__vector_16>:
}

void		__vector_16	(void)
{
 200:	1f 92       	push	r1
 202:	0f 92       	push	r0
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	0f 92       	push	r0
 208:	11 24       	eor	r1, r1
 20a:	2f 93       	push	r18
 20c:	3f 93       	push	r19
 20e:	4f 93       	push	r20
 210:	5f 93       	push	r21
 212:	6f 93       	push	r22
 214:	7f 93       	push	r23
 216:	8f 93       	push	r24
 218:	9f 93       	push	r25
 21a:	af 93       	push	r26
 21c:	bf 93       	push	r27
 21e:	ef 93       	push	r30
 220:	ff 93       	push	r31
	ADC_CallBack();
 222:	e0 91 a4 00 	lds	r30, 0x00A4	; 0x8000a4 <__data_end>
 226:	f0 91 a5 00 	lds	r31, 0x00A5	; 0x8000a5 <__data_end+0x1>
 22a:	09 95       	icall
}
 22c:	ff 91       	pop	r31
 22e:	ef 91       	pop	r30
 230:	bf 91       	pop	r27
 232:	af 91       	pop	r26
 234:	9f 91       	pop	r25
 236:	8f 91       	pop	r24
 238:	7f 91       	pop	r23
 23a:	6f 91       	pop	r22
 23c:	5f 91       	pop	r21
 23e:	4f 91       	pop	r20
 240:	3f 91       	pop	r19
 242:	2f 91       	pop	r18
 244:	0f 90       	pop	r0
 246:	0f be       	out	0x3f, r0	; 63
 248:	0f 90       	pop	r0
 24a:	1f 90       	pop	r1
 24c:	18 95       	reti

0000024e <DIO_voidSetPinDirection>:
	else
	{
		/*	Returen Error 								*/
	}	
	return Local_u8Value ;
}
 24e:	84 30       	cpi	r24, 0x04	; 4
 250:	08 f0       	brcs	.+2      	; 0x254 <DIO_voidSetPinDirection+0x6>
 252:	72 c0       	rjmp	.+228    	; 0x338 <DIO_voidSetPinDirection+0xea>
 254:	68 30       	cpi	r22, 0x08	; 8
 256:	08 f0       	brcs	.+2      	; 0x25a <DIO_voidSetPinDirection+0xc>
 258:	6f c0       	rjmp	.+222    	; 0x338 <DIO_voidSetPinDirection+0xea>
 25a:	41 30       	cpi	r20, 0x01	; 1
 25c:	a1 f5       	brne	.+104    	; 0x2c6 <DIO_voidSetPinDirection+0x78>
 25e:	81 30       	cpi	r24, 0x01	; 1
 260:	89 f0       	breq	.+34     	; 0x284 <DIO_voidSetPinDirection+0x36>
 262:	28 f0       	brcs	.+10     	; 0x26e <DIO_voidSetPinDirection+0x20>
 264:	82 30       	cpi	r24, 0x02	; 2
 266:	c9 f0       	breq	.+50     	; 0x29a <DIO_voidSetPinDirection+0x4c>
 268:	83 30       	cpi	r24, 0x03	; 3
 26a:	11 f1       	breq	.+68     	; 0x2b0 <DIO_voidSetPinDirection+0x62>
 26c:	08 95       	ret
 26e:	2a b3       	in	r18, 0x1a	; 26
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_voidSetPinDirection+0x2c>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_voidSetPinDirection+0x28>
 27e:	82 2b       	or	r24, r18
 280:	8a bb       	out	0x1a, r24	; 26
 282:	08 95       	ret
 284:	27 b3       	in	r18, 0x17	; 23
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_voidSetPinDirection+0x42>
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	6a 95       	dec	r22
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_voidSetPinDirection+0x3e>
 294:	82 2b       	or	r24, r18
 296:	87 bb       	out	0x17, r24	; 23
 298:	08 95       	ret
 29a:	24 b3       	in	r18, 0x14	; 20
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <DIO_voidSetPinDirection+0x58>
 2a2:	88 0f       	add	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	6a 95       	dec	r22
 2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <DIO_voidSetPinDirection+0x54>
 2aa:	82 2b       	or	r24, r18
 2ac:	84 bb       	out	0x14, r24	; 20
 2ae:	08 95       	ret
 2b0:	21 b3       	in	r18, 0x11	; 17
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_voidSetPinDirection+0x6e>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	6a 95       	dec	r22
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_voidSetPinDirection+0x6a>
 2c0:	82 2b       	or	r24, r18
 2c2:	81 bb       	out	0x11, r24	; 17
 2c4:	08 95       	ret
 2c6:	41 11       	cpse	r20, r1
 2c8:	37 c0       	rjmp	.+110    	; 0x338 <DIO_voidSetPinDirection+0xea>
 2ca:	81 30       	cpi	r24, 0x01	; 1
 2cc:	91 f0       	breq	.+36     	; 0x2f2 <DIO_voidSetPinDirection+0xa4>
 2ce:	28 f0       	brcs	.+10     	; 0x2da <DIO_voidSetPinDirection+0x8c>
 2d0:	82 30       	cpi	r24, 0x02	; 2
 2d2:	d9 f0       	breq	.+54     	; 0x30a <DIO_voidSetPinDirection+0xbc>
 2d4:	83 30       	cpi	r24, 0x03	; 3
 2d6:	29 f1       	breq	.+74     	; 0x322 <DIO_voidSetPinDirection+0xd4>
 2d8:	08 95       	ret
 2da:	2a b3       	in	r18, 0x1a	; 26
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <DIO_voidSetPinDirection+0x98>
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	6a 95       	dec	r22
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <DIO_voidSetPinDirection+0x94>
 2ea:	80 95       	com	r24
 2ec:	82 23       	and	r24, r18
 2ee:	8a bb       	out	0x1a, r24	; 26
 2f0:	08 95       	ret
 2f2:	27 b3       	in	r18, 0x17	; 23
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_voidSetPinDirection+0xb0>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_voidSetPinDirection+0xac>
 302:	80 95       	com	r24
 304:	82 23       	and	r24, r18
 306:	87 bb       	out	0x17, r24	; 23
 308:	08 95       	ret
 30a:	24 b3       	in	r18, 0x14	; 20
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	02 c0       	rjmp	.+4      	; 0x316 <DIO_voidSetPinDirection+0xc8>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	6a 95       	dec	r22
 318:	e2 f7       	brpl	.-8      	; 0x312 <DIO_voidSetPinDirection+0xc4>
 31a:	80 95       	com	r24
 31c:	82 23       	and	r24, r18
 31e:	84 bb       	out	0x14, r24	; 20
 320:	08 95       	ret
 322:	21 b3       	in	r18, 0x11	; 17
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_voidSetPinDirection+0xe0>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	6a 95       	dec	r22
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_voidSetPinDirection+0xdc>
 332:	80 95       	com	r24
 334:	82 23       	and	r24, r18
 336:	81 bb       	out	0x11, r24	; 17
 338:	08 95       	ret

0000033a <DIO_voidSetPinValue>:
 33a:	84 30       	cpi	r24, 0x04	; 4
 33c:	08 f0       	brcs	.+2      	; 0x340 <DIO_voidSetPinValue+0x6>
 33e:	72 c0       	rjmp	.+228    	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 340:	68 30       	cpi	r22, 0x08	; 8
 342:	08 f0       	brcs	.+2      	; 0x346 <DIO_voidSetPinValue+0xc>
 344:	6f c0       	rjmp	.+222    	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 346:	41 30       	cpi	r20, 0x01	; 1
 348:	a1 f5       	brne	.+104    	; 0x3b2 <DIO_voidSetPinValue+0x78>
 34a:	81 30       	cpi	r24, 0x01	; 1
 34c:	89 f0       	breq	.+34     	; 0x370 <DIO_voidSetPinValue+0x36>
 34e:	28 f0       	brcs	.+10     	; 0x35a <DIO_voidSetPinValue+0x20>
 350:	82 30       	cpi	r24, 0x02	; 2
 352:	c9 f0       	breq	.+50     	; 0x386 <DIO_voidSetPinValue+0x4c>
 354:	83 30       	cpi	r24, 0x03	; 3
 356:	11 f1       	breq	.+68     	; 0x39c <DIO_voidSetPinValue+0x62>
 358:	08 95       	ret
 35a:	2b b3       	in	r18, 0x1b	; 27
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	02 c0       	rjmp	.+4      	; 0x366 <DIO_voidSetPinValue+0x2c>
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	6a 95       	dec	r22
 368:	e2 f7       	brpl	.-8      	; 0x362 <DIO_voidSetPinValue+0x28>
 36a:	82 2b       	or	r24, r18
 36c:	8b bb       	out	0x1b, r24	; 27
 36e:	08 95       	ret
 370:	28 b3       	in	r18, 0x18	; 24
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <DIO_voidSetPinValue+0x42>
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	6a 95       	dec	r22
 37e:	e2 f7       	brpl	.-8      	; 0x378 <DIO_voidSetPinValue+0x3e>
 380:	82 2b       	or	r24, r18
 382:	88 bb       	out	0x18, r24	; 24
 384:	08 95       	ret
 386:	25 b3       	in	r18, 0x15	; 21
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 c0       	rjmp	.+4      	; 0x392 <DIO_voidSetPinValue+0x58>
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	6a 95       	dec	r22
 394:	e2 f7       	brpl	.-8      	; 0x38e <DIO_voidSetPinValue+0x54>
 396:	82 2b       	or	r24, r18
 398:	85 bb       	out	0x15, r24	; 21
 39a:	08 95       	ret
 39c:	22 b3       	in	r18, 0x12	; 18
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <DIO_voidSetPinValue+0x6e>
 3a4:	88 0f       	add	r24, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	6a 95       	dec	r22
 3aa:	e2 f7       	brpl	.-8      	; 0x3a4 <DIO_voidSetPinValue+0x6a>
 3ac:	82 2b       	or	r24, r18
 3ae:	82 bb       	out	0x12, r24	; 18
 3b0:	08 95       	ret
 3b2:	41 11       	cpse	r20, r1
 3b4:	37 c0       	rjmp	.+110    	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 3b6:	81 30       	cpi	r24, 0x01	; 1
 3b8:	91 f0       	breq	.+36     	; 0x3de <DIO_voidSetPinValue+0xa4>
 3ba:	28 f0       	brcs	.+10     	; 0x3c6 <DIO_voidSetPinValue+0x8c>
 3bc:	82 30       	cpi	r24, 0x02	; 2
 3be:	d9 f0       	breq	.+54     	; 0x3f6 <DIO_voidSetPinValue+0xbc>
 3c0:	83 30       	cpi	r24, 0x03	; 3
 3c2:	29 f1       	breq	.+74     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3c4:	08 95       	ret
 3c6:	2b b3       	in	r18, 0x1b	; 27
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <DIO_voidSetPinValue+0x98>
 3ce:	88 0f       	add	r24, r24
 3d0:	99 1f       	adc	r25, r25
 3d2:	6a 95       	dec	r22
 3d4:	e2 f7       	brpl	.-8      	; 0x3ce <DIO_voidSetPinValue+0x94>
 3d6:	80 95       	com	r24
 3d8:	82 23       	and	r24, r18
 3da:	8b bb       	out	0x1b, r24	; 27
 3dc:	08 95       	ret
 3de:	28 b3       	in	r18, 0x18	; 24
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <DIO_voidSetPinValue+0xb0>
 3e6:	88 0f       	add	r24, r24
 3e8:	99 1f       	adc	r25, r25
 3ea:	6a 95       	dec	r22
 3ec:	e2 f7       	brpl	.-8      	; 0x3e6 <DIO_voidSetPinValue+0xac>
 3ee:	80 95       	com	r24
 3f0:	82 23       	and	r24, r18
 3f2:	88 bb       	out	0x18, r24	; 24
 3f4:	08 95       	ret
 3f6:	25 b3       	in	r18, 0x15	; 21
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3fe:	88 0f       	add	r24, r24
 400:	99 1f       	adc	r25, r25
 402:	6a 95       	dec	r22
 404:	e2 f7       	brpl	.-8      	; 0x3fe <DIO_voidSetPinValue+0xc4>
 406:	80 95       	com	r24
 408:	82 23       	and	r24, r18
 40a:	85 bb       	out	0x15, r24	; 21
 40c:	08 95       	ret
 40e:	22 b3       	in	r18, 0x12	; 18
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 c0       	rjmp	.+4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	6a 95       	dec	r22
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	80 95       	com	r24
 420:	82 23       	and	r24, r18
 422:	82 bb       	out	0x12, r24	; 18
 424:	08 95       	ret

00000426 <DIO_voidSetPortDirection>:
void	DIO_voidSetPortDirection(u8 PortID , u8 Direction)
{
	if(PortID <4){
 426:	84 30       	cpi	r24, 0x04	; 4
 428:	78 f4       	brcc	.+30     	; 0x448 <DIO_voidSetPortDirection+0x22>
		switch(PortID){
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	41 f0       	breq	.+16     	; 0x43e <DIO_voidSetPortDirection+0x18>
 42e:	28 f0       	brcs	.+10     	; 0x43a <DIO_voidSetPortDirection+0x14>
 430:	82 30       	cpi	r24, 0x02	; 2
 432:	39 f0       	breq	.+14     	; 0x442 <DIO_voidSetPortDirection+0x1c>
 434:	83 30       	cpi	r24, 0x03	; 3
 436:	39 f0       	breq	.+14     	; 0x446 <DIO_voidSetPortDirection+0x20>
 438:	08 95       	ret
			case PORTA:		
						DDRA_REG = Direction ;
 43a:	6a bb       	out	0x1a, r22	; 26
						break;
 43c:	08 95       	ret
			case PORTB:
						DDRB_REG = Direction ;
 43e:	67 bb       	out	0x17, r22	; 23
						break;
 440:	08 95       	ret
			case PORTC:
						DDRC_REG = Direction ;
 442:	64 bb       	out	0x14, r22	; 20
						break;
 444:	08 95       	ret
			case PORTD:
						DDRD_REG = Direction ;
 446:	61 bb       	out	0x11, r22	; 17
 448:	08 95       	ret

0000044a <DIO_voidSetPortValue>:
	}	
}

void	DIO_voidSetPortValue(u8 PortID , u8 Value){
	
	if(PortID <4){
 44a:	84 30       	cpi	r24, 0x04	; 4
 44c:	78 f4       	brcc	.+30     	; 0x46c <DIO_voidSetPortValue+0x22>
		switch(PortID){
 44e:	81 30       	cpi	r24, 0x01	; 1
 450:	41 f0       	breq	.+16     	; 0x462 <DIO_voidSetPortValue+0x18>
 452:	28 f0       	brcs	.+10     	; 0x45e <DIO_voidSetPortValue+0x14>
 454:	82 30       	cpi	r24, 0x02	; 2
 456:	39 f0       	breq	.+14     	; 0x466 <DIO_voidSetPortValue+0x1c>
 458:	83 30       	cpi	r24, 0x03	; 3
 45a:	39 f0       	breq	.+14     	; 0x46a <DIO_voidSetPortValue+0x20>
 45c:	08 95       	ret
			case PORTA:
						PORTA_REG = Value;
 45e:	6b bb       	out	0x1b, r22	; 27
						break;
 460:	08 95       	ret
			case PORTB:
						PORTB_REG = Value;
 462:	68 bb       	out	0x18, r22	; 24
						break;
 464:	08 95       	ret
			case PORTC:
						PORTC_REG = Value;
 466:	65 bb       	out	0x15, r22	; 21
						break;
 468:	08 95       	ret
			case PORTD:
						PORTD_REG = Value;
 46a:	62 bb       	out	0x12, r22	; 18
 46c:	08 95       	ret

0000046e <LCD_voidWriteChar8bit>:
	LCD_voidSendCMD4bit(0x28);
	
	LCD_voidSendCMD4bit(0x0C);
	LCD_voidSendCMD4bit(0x01);
	LCD_voidSendCMD4bit(0x06);
	LCD_voidSendCMD4bit(0x02);
 46e:	cf 93       	push	r28
 470:	c8 2f       	mov	r28, r24
 472:	41 e0       	ldi	r20, 0x01	; 1
 474:	61 e0       	ldi	r22, 0x01	; 1
 476:	83 e0       	ldi	r24, 0x03	; 3
 478:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 47c:	40 e0       	ldi	r20, 0x00	; 0
 47e:	62 e0       	ldi	r22, 0x02	; 2
 480:	83 e0       	ldi	r24, 0x03	; 3
 482:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 486:	41 e0       	ldi	r20, 0x01	; 1
 488:	63 e0       	ldi	r22, 0x03	; 3
 48a:	83 e0       	ldi	r24, 0x03	; 3
 48c:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 490:	8f e1       	ldi	r24, 0x1F	; 31
 492:	9e e4       	ldi	r25, 0x4E	; 78
 494:	01 97       	sbiw	r24, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <LCD_voidWriteChar8bit+0x26>
 498:	00 c0       	rjmp	.+0      	; 0x49a <LCD_voidWriteChar8bit+0x2c>
 49a:	00 00       	nop
 49c:	6c 2f       	mov	r22, r28
 49e:	82 e0       	ldi	r24, 0x02	; 2
 4a0:	0e 94 25 02 	call	0x44a	; 0x44a <DIO_voidSetPortValue>
 4a4:	40 e0       	ldi	r20, 0x00	; 0
 4a6:	63 e0       	ldi	r22, 0x03	; 3
 4a8:	83 e0       	ldi	r24, 0x03	; 3
 4aa:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 4ae:	8f e1       	ldi	r24, 0x1F	; 31
 4b0:	9e e4       	ldi	r25, 0x4E	; 78
 4b2:	01 97       	sbiw	r24, 0x01	; 1
 4b4:	f1 f7       	brne	.-4      	; 0x4b2 <LCD_voidWriteChar8bit+0x44>
 4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <LCD_voidWriteChar8bit+0x4a>
 4b8:	00 00       	nop
 4ba:	cf 91       	pop	r28
 4bc:	08 95       	ret

000004be <LCD_voidSendCMD8bit>:
 4be:	cf 93       	push	r28
 4c0:	c8 2f       	mov	r28, r24
 4c2:	40 e0       	ldi	r20, 0x00	; 0
 4c4:	61 e0       	ldi	r22, 0x01	; 1
 4c6:	83 e0       	ldi	r24, 0x03	; 3
 4c8:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 4cc:	40 e0       	ldi	r20, 0x00	; 0
 4ce:	62 e0       	ldi	r22, 0x02	; 2
 4d0:	83 e0       	ldi	r24, 0x03	; 3
 4d2:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 4d6:	41 e0       	ldi	r20, 0x01	; 1
 4d8:	63 e0       	ldi	r22, 0x03	; 3
 4da:	83 e0       	ldi	r24, 0x03	; 3
 4dc:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 4e0:	8f e1       	ldi	r24, 0x1F	; 31
 4e2:	9e e4       	ldi	r25, 0x4E	; 78
 4e4:	01 97       	sbiw	r24, 0x01	; 1
 4e6:	f1 f7       	brne	.-4      	; 0x4e4 <LCD_voidSendCMD8bit+0x26>
 4e8:	00 c0       	rjmp	.+0      	; 0x4ea <LCD_voidSendCMD8bit+0x2c>
 4ea:	00 00       	nop
 4ec:	6c 2f       	mov	r22, r28
 4ee:	82 e0       	ldi	r24, 0x02	; 2
 4f0:	0e 94 25 02 	call	0x44a	; 0x44a <DIO_voidSetPortValue>
 4f4:	40 e0       	ldi	r20, 0x00	; 0
 4f6:	63 e0       	ldi	r22, 0x03	; 3
 4f8:	83 e0       	ldi	r24, 0x03	; 3
 4fa:	0e 94 9d 01 	call	0x33a	; 0x33a <DIO_voidSetPinValue>
 4fe:	8f e1       	ldi	r24, 0x1F	; 31
 500:	9e e4       	ldi	r25, 0x4E	; 78
 502:	01 97       	sbiw	r24, 0x01	; 1
 504:	f1 f7       	brne	.-4      	; 0x502 <LCD_voidSendCMD8bit+0x44>
 506:	00 c0       	rjmp	.+0      	; 0x508 <LCD_voidSendCMD8bit+0x4a>
 508:	00 00       	nop
 50a:	cf 91       	pop	r28
 50c:	08 95       	ret

0000050e <LCD_voidInit8bit>:
 50e:	2f e7       	ldi	r18, 0x7F	; 127
 510:	85 eb       	ldi	r24, 0xB5	; 181
 512:	91 e0       	ldi	r25, 0x01	; 1
 514:	21 50       	subi	r18, 0x01	; 1
 516:	80 40       	sbci	r24, 0x00	; 0
 518:	90 40       	sbci	r25, 0x00	; 0
 51a:	e1 f7       	brne	.-8      	; 0x514 <LCD_voidInit8bit+0x6>
 51c:	00 c0       	rjmp	.+0      	; 0x51e <LCD_voidInit8bit+0x10>
 51e:	00 00       	nop
 520:	88 e3       	ldi	r24, 0x38	; 56
 522:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 526:	8f e9       	ldi	r24, 0x9F	; 159
 528:	9f e0       	ldi	r25, 0x0F	; 15
 52a:	01 97       	sbiw	r24, 0x01	; 1
 52c:	f1 f7       	brne	.-4      	; 0x52a <LCD_voidInit8bit+0x1c>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <LCD_voidInit8bit+0x22>
 530:	00 00       	nop
 532:	8c e0       	ldi	r24, 0x0C	; 12
 534:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 538:	8f e9       	ldi	r24, 0x9F	; 159
 53a:	9f e0       	ldi	r25, 0x0F	; 15
 53c:	01 97       	sbiw	r24, 0x01	; 1
 53e:	f1 f7       	brne	.-4      	; 0x53c <LCD_voidInit8bit+0x2e>
 540:	00 c0       	rjmp	.+0      	; 0x542 <LCD_voidInit8bit+0x34>
 542:	00 00       	nop
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 54a:	8f e3       	ldi	r24, 0x3F	; 63
 54c:	9f e1       	ldi	r25, 0x1F	; 31
 54e:	01 97       	sbiw	r24, 0x01	; 1
 550:	f1 f7       	brne	.-4      	; 0x54e <LCD_voidInit8bit+0x40>
 552:	00 c0       	rjmp	.+0      	; 0x554 <LCD_voidInit8bit+0x46>
 554:	00 00       	nop
 556:	86 e0       	ldi	r24, 0x06	; 6
 558:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 55c:	08 95       	ret

0000055e <LCD_voidWriteString>:
	DIO_voidSetPinValue(LCD_CONTROL_PORT,LCD_EN,LOW);
	_delay_ms(1);
}
// Warning avoid (u8*) ""
void	LCD_voidWriteString(u8 * string)
{
 55e:	0f 93       	push	r16
 560:	1f 93       	push	r17
 562:	cf 93       	push	r28
 564:	8c 01       	movw	r16, r24
	u8 Local_u8Val = 0;
 566:	c0 e0       	ldi	r28, 0x00	; 0
	while(string[Local_u8Val] != '\0'){
 568:	09 c0       	rjmp	.+18     	; 0x57c <LCD_voidWriteString+0x1e>
		switch(LCD_MODE){
			case 4:	LCD_voidWriteChar4bit(string[Local_u8Val]);break;
			case 8: LCD_voidWriteChar8bit(string[Local_u8Val]);break;
 56a:	0e 94 37 02 	call	0x46e	; 0x46e <LCD_voidWriteChar8bit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 56e:	8f e3       	ldi	r24, 0x3F	; 63
 570:	9c e9       	ldi	r25, 0x9C	; 156
 572:	01 97       	sbiw	r24, 0x01	; 1
 574:	f1 f7       	brne	.-4      	; 0x572 <LCD_voidWriteString+0x14>
 576:	00 c0       	rjmp	.+0      	; 0x578 <LCD_voidWriteString+0x1a>
 578:	00 00       	nop
		}
		_delay_ms(10);
		Local_u8Val++;
 57a:	cf 5f       	subi	r28, 0xFF	; 255
}
// Warning avoid (u8*) ""
void	LCD_voidWriteString(u8 * string)
{
	u8 Local_u8Val = 0;
	while(string[Local_u8Val] != '\0'){
 57c:	f8 01       	movw	r30, r16
 57e:	ec 0f       	add	r30, r28
 580:	f1 1d       	adc	r31, r1
 582:	80 81       	ld	r24, Z
 584:	81 11       	cpse	r24, r1
 586:	f1 cf       	rjmp	.-30     	; 0x56a <LCD_voidWriteString+0xc>
		}
		_delay_ms(10);
		Local_u8Val++;
	}
	
}
 588:	cf 91       	pop	r28
 58a:	1f 91       	pop	r17
 58c:	0f 91       	pop	r16
 58e:	08 95       	ret

00000590 <LCD_voidLCDClear>:
	if(LCD_MODE==4)
	{
		LCD_voidSendCMD4bit(0x01);
	}
	else if(LCD_MODE==8){
		LCD_voidSendCMD8bit(0x01);
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 596:	08 95       	ret

00000598 <LCD_voidGotoXY>:
	}
	
}

void	LCD_voidGotoXY(u8 Line, u8 Col){
	if(Line==0)
 598:	81 11       	cpse	r24, r1
 59a:	05 c0       	rjmp	.+10     	; 0x5a6 <LCD_voidGotoXY+0xe>
	{
		switch(LCD_MODE){
			case 4:	LCD_voidSendCMD4bit((0x80+Col));break;
			case 8: LCD_voidSendCMD8bit((0x80+Col));break;
 59c:	80 e8       	ldi	r24, 0x80	; 128
 59e:	86 0f       	add	r24, r22
 5a0:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 5a4:	08 95       	ret
		}
	}
	else if(Line==1){
 5a6:	81 30       	cpi	r24, 0x01	; 1
 5a8:	21 f4       	brne	.+8      	; 0x5b2 <LCD_voidGotoXY+0x1a>
		switch(LCD_MODE){
			case 4:	LCD_voidSendCMD4bit((0xC0+Col));break;
			case 8: LCD_voidSendCMD8bit((0xC0+Col));break;
 5aa:	80 ec       	ldi	r24, 0xC0	; 192
 5ac:	86 0f       	add	r24, r22
 5ae:	0e 94 5f 02 	call	0x4be	; 0x4be <LCD_voidSendCMD8bit>
 5b2:	08 95       	ret

000005b4 <main>:
}

int main(void)
{
	//LCD Display
	DIO_voidSetPinDirection(PORTD,PIN1,OUTPUT);
 5b4:	41 e0       	ldi	r20, 0x01	; 1
 5b6:	61 e0       	ldi	r22, 0x01	; 1
 5b8:	83 e0       	ldi	r24, 0x03	; 3
 5ba:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTD,PIN2,OUTPUT);
 5be:	41 e0       	ldi	r20, 0x01	; 1
 5c0:	62 e0       	ldi	r22, 0x02	; 2
 5c2:	83 e0       	ldi	r24, 0x03	; 3
 5c4:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTD,PIN3,OUTPUT);
 5c8:	41 e0       	ldi	r20, 0x01	; 1
 5ca:	63 e0       	ldi	r22, 0x03	; 3
 5cc:	83 e0       	ldi	r24, 0x03	; 3
 5ce:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	
	//Finger sensors input
	DIO_voidSetPinDirection(PORTA,PIN0,INPUT);   //Thumb
 5d2:	40 e0       	ldi	r20, 0x00	; 0
 5d4:	60 e0       	ldi	r22, 0x00	; 0
 5d6:	80 e0       	ldi	r24, 0x00	; 0
 5d8:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN1,INPUT);	 //Index
 5dc:	40 e0       	ldi	r20, 0x00	; 0
 5de:	61 e0       	ldi	r22, 0x01	; 1
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN2,INPUT);	 //Middle
 5e6:	40 e0       	ldi	r20, 0x00	; 0
 5e8:	62 e0       	ldi	r22, 0x02	; 2
 5ea:	80 e0       	ldi	r24, 0x00	; 0
 5ec:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN3,INPUT);	 //Ring
 5f0:	40 e0       	ldi	r20, 0x00	; 0
 5f2:	63 e0       	ldi	r22, 0x03	; 3
 5f4:	80 e0       	ldi	r24, 0x00	; 0
 5f6:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(PORTA,PIN4,INPUT);	 //Pinky
 5fa:	40 e0       	ldi	r20, 0x00	; 0
 5fc:	64 e0       	ldi	r22, 0x04	; 4
 5fe:	80 e0       	ldi	r24, 0x00	; 0
 600:	0e 94 27 01 	call	0x24e	; 0x24e <DIO_voidSetPinDirection>
	
	//ADC Initialization
	ADC_voidInit();
 604:	0e 94 51 00 	call	0xa2	; 0xa2 <ADC_voidInit>
	ADC_voidEnable();
 608:	0e 94 6a 00 	call	0xd4	; 0xd4 <ADC_voidEnable>
	u16 Ring   =0;
	u16 Pinky  =0;
	
	//readValues(Thumb,Index,Middle,Ring,Pinky);
	///*	LCD init	  */
	LCD_voidInit8bit();
 60c:	0e 94 87 02 	call	0x50e	; 0x50e <LCD_voidInit8bit>
	DIO_voidSetPortDirection(PORTC,0xFF);
 610:	6f ef       	ldi	r22, 0xFF	; 255
 612:	82 e0       	ldi	r24, 0x02	; 2
 614:	0e 94 13 02 	call	0x426	; 0x426 <DIO_voidSetPortDirection>
	
	while(1)
	{
			ADC_voidSetChannel(PIN0);
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_voidSetChannel>
			Thumb = ADC_u16ReadValue();
 61e:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <ADC_u16ReadValue>
			Thumb = ((Thumb * 5000UL)/1024);
 622:	9c 01       	movw	r18, r24
 624:	a8 e8       	ldi	r26, 0x88	; 136
 626:	b3 e1       	ldi	r27, 0x13	; 19
 628:	0e 94 cc 04 	call	0x998	; 0x998 <__umulhisi3>
 62c:	dc 01       	movw	r26, r24
 62e:	cb 01       	movw	r24, r22
 630:	07 2e       	mov	r0, r23
 632:	7a e0       	ldi	r23, 0x0A	; 10
 634:	b6 95       	lsr	r27
 636:	a7 95       	ror	r26
 638:	97 95       	ror	r25
 63a:	87 95       	ror	r24
 63c:	7a 95       	dec	r23
 63e:	d1 f7       	brne	.-12     	; 0x634 <main+0x80>
 640:	70 2d       	mov	r23, r0
 642:	ec 01       	movw	r28, r24
			//Index Channel
			ADC_voidSetChannel(PIN1);
 644:	81 e0       	ldi	r24, 0x01	; 1
 646:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_voidSetChannel>
			Index = ADC_u16ReadValue();
 64a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <ADC_u16ReadValue>
			Index = ((Index * 5000UL)/1024);
 64e:	9c 01       	movw	r18, r24
 650:	a8 e8       	ldi	r26, 0x88	; 136
 652:	b3 e1       	ldi	r27, 0x13	; 19
 654:	0e 94 cc 04 	call	0x998	; 0x998 <__umulhisi3>
 658:	dc 01       	movw	r26, r24
 65a:	cb 01       	movw	r24, r22
 65c:	07 2e       	mov	r0, r23
 65e:	7a e0       	ldi	r23, 0x0A	; 10
 660:	b6 95       	lsr	r27
 662:	a7 95       	ror	r26
 664:	97 95       	ror	r25
 666:	87 95       	ror	r24
 668:	7a 95       	dec	r23
 66a:	d1 f7       	brne	.-12     	; 0x660 <main+0xac>
 66c:	70 2d       	mov	r23, r0
 66e:	8c 01       	movw	r16, r24
			//Middle Channel
			ADC_voidSetChannel(PIN2);
 670:	82 e0       	ldi	r24, 0x02	; 2
 672:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_voidSetChannel>
			Middle = ADC_u16ReadValue();
 676:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <ADC_u16ReadValue>
			Middle = ((Middle * 5000UL)/1024);
 67a:	9c 01       	movw	r18, r24
 67c:	a8 e8       	ldi	r26, 0x88	; 136
 67e:	b3 e1       	ldi	r27, 0x13	; 19
 680:	0e 94 cc 04 	call	0x998	; 0x998 <__umulhisi3>
 684:	dc 01       	movw	r26, r24
 686:	cb 01       	movw	r24, r22
 688:	07 2e       	mov	r0, r23
 68a:	7a e0       	ldi	r23, 0x0A	; 10
 68c:	b6 95       	lsr	r27
 68e:	a7 95       	ror	r26
 690:	97 95       	ror	r25
 692:	87 95       	ror	r24
 694:	7a 95       	dec	r23
 696:	d1 f7       	brne	.-12     	; 0x68c <main+0xd8>
 698:	70 2d       	mov	r23, r0
 69a:	7c 01       	movw	r14, r24
			//Ring Channel
			ADC_voidSetChannel(PIN3);
 69c:	83 e0       	ldi	r24, 0x03	; 3
 69e:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_voidSetChannel>
			Ring = ADC_u16ReadValue();
 6a2:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <ADC_u16ReadValue>
			Ring = ((Ring * 5000UL)/1024);
 6a6:	9c 01       	movw	r18, r24
 6a8:	a8 e8       	ldi	r26, 0x88	; 136
 6aa:	b3 e1       	ldi	r27, 0x13	; 19
 6ac:	0e 94 cc 04 	call	0x998	; 0x998 <__umulhisi3>
 6b0:	dc 01       	movw	r26, r24
 6b2:	cb 01       	movw	r24, r22
 6b4:	07 2e       	mov	r0, r23
 6b6:	7a e0       	ldi	r23, 0x0A	; 10
 6b8:	b6 95       	lsr	r27
 6ba:	a7 95       	ror	r26
 6bc:	97 95       	ror	r25
 6be:	87 95       	ror	r24
 6c0:	7a 95       	dec	r23
 6c2:	d1 f7       	brne	.-12     	; 0x6b8 <main+0x104>
 6c4:	70 2d       	mov	r23, r0
 6c6:	6c 01       	movw	r12, r24
			//Pinky Channel
			ADC_voidSetChannel(PIN4);
 6c8:	84 e0       	ldi	r24, 0x04	; 4
 6ca:	0e 94 6e 00 	call	0xdc	; 0xdc <ADC_voidSetChannel>
			Pinky = ADC_u16ReadValue();
 6ce:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <ADC_u16ReadValue>
			Pinky = ((Pinky * 5000UL)/1024);
 6d2:	9c 01       	movw	r18, r24
 6d4:	a8 e8       	ldi	r26, 0x88	; 136
 6d6:	b3 e1       	ldi	r27, 0x13	; 19
 6d8:	0e 94 cc 04 	call	0x998	; 0x998 <__umulhisi3>
 6dc:	dc 01       	movw	r26, r24
 6de:	cb 01       	movw	r24, r22
 6e0:	07 2e       	mov	r0, r23
 6e2:	7a e0       	ldi	r23, 0x0A	; 10
 6e4:	b6 95       	lsr	r27
 6e6:	a7 95       	ror	r26
 6e8:	97 95       	ror	r25
 6ea:	87 95       	ror	r24
 6ec:	7a 95       	dec	r23
 6ee:	d1 f7       	brne	.-12     	; 0x6e4 <main+0x130>
 6f0:	70 2d       	mov	r23, r0
 6f2:	bc 01       	movw	r22, r24
			if(Thumb>2500 && Index>2500 && Middle>2500 && Ring>2500 && Pinky>2500 )
 6f4:	c5 3c       	cpi	r28, 0xC5	; 197
 6f6:	29 e0       	ldi	r18, 0x09	; 9
 6f8:	d2 07       	cpc	r29, r18
 6fa:	60 f1       	brcs	.+88     	; 0x754 <main+0x1a0>
 6fc:	05 3c       	cpi	r16, 0xC5	; 197
 6fe:	89 e0       	ldi	r24, 0x09	; 9
 700:	18 07       	cpc	r17, r24
 702:	40 f1       	brcs	.+80     	; 0x754 <main+0x1a0>
 704:	95 ec       	ldi	r25, 0xC5	; 197
 706:	e9 16       	cp	r14, r25
 708:	99 e0       	ldi	r25, 0x09	; 9
 70a:	f9 06       	cpc	r15, r25
 70c:	18 f1       	brcs	.+70     	; 0x754 <main+0x1a0>
 70e:	25 ec       	ldi	r18, 0xC5	; 197
 710:	c2 16       	cp	r12, r18
 712:	29 e0       	ldi	r18, 0x09	; 9
 714:	d2 06       	cpc	r13, r18
 716:	f0 f0       	brcs	.+60     	; 0x754 <main+0x1a0>
 718:	65 3c       	cpi	r22, 0xC5	; 197
 71a:	89 e0       	ldi	r24, 0x09	; 9
 71c:	78 07       	cpc	r23, r24
 71e:	d0 f0       	brcs	.+52     	; 0x754 <main+0x1a0>
			{
				LCD_voidGotoXY(0,0);
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	80 e0       	ldi	r24, 0x00	; 0
 724:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 728:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
 72c:	8f e3       	ldi	r24, 0x3F	; 63
 72e:	9c e9       	ldi	r25, 0x9C	; 156
 730:	01 97       	sbiw	r24, 0x01	; 1
 732:	f1 f7       	brne	.-4      	; 0x730 <main+0x17c>
 734:	00 c0       	rjmp	.+0      	; 0x736 <main+0x182>
 736:	00 00       	nop
				_delay_ms(10);
				LCD_voidWriteString("Good Luck");
 738:	80 e6       	ldi	r24, 0x60	; 96
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
 740:	9f ef       	ldi	r25, 0xFF	; 255
 742:	21 ee       	ldi	r18, 0xE1	; 225
 744:	84 e0       	ldi	r24, 0x04	; 4
 746:	91 50       	subi	r25, 0x01	; 1
 748:	20 40       	sbci	r18, 0x00	; 0
 74a:	80 40       	sbci	r24, 0x00	; 0
 74c:	e1 f7       	brne	.-8      	; 0x746 <main+0x192>
 74e:	00 c0       	rjmp	.+0      	; 0x750 <main+0x19c>
 750:	00 00       	nop
 752:	62 cf       	rjmp	.-316    	; 0x618 <main+0x64>
				_delay_ms(100);
			}
			else if(Thumb>2500 && Index<=2500 && Middle<=2500 && Ring<=2500 && Pinky<=2500 ){
 754:	c5 3c       	cpi	r28, 0xC5	; 197
 756:	99 e0       	ldi	r25, 0x09	; 9
 758:	d9 07       	cpc	r29, r25
 75a:	50 f1       	brcs	.+84     	; 0x7b0 <main+0x1fc>
 75c:	05 3c       	cpi	r16, 0xC5	; 197
 75e:	29 e0       	ldi	r18, 0x09	; 9
 760:	12 07       	cpc	r17, r18
 762:	30 f5       	brcc	.+76     	; 0x7b0 <main+0x1fc>
 764:	85 ec       	ldi	r24, 0xC5	; 197
 766:	e8 16       	cp	r14, r24
 768:	89 e0       	ldi	r24, 0x09	; 9
 76a:	f8 06       	cpc	r15, r24
 76c:	08 f5       	brcc	.+66     	; 0x7b0 <main+0x1fc>
 76e:	95 ec       	ldi	r25, 0xC5	; 197
 770:	c9 16       	cp	r12, r25
 772:	99 e0       	ldi	r25, 0x09	; 9
 774:	d9 06       	cpc	r13, r25
 776:	e0 f4       	brcc	.+56     	; 0x7b0 <main+0x1fc>
 778:	65 3c       	cpi	r22, 0xC5	; 197
 77a:	29 e0       	ldi	r18, 0x09	; 9
 77c:	72 07       	cpc	r23, r18
 77e:	c0 f4       	brcc	.+48     	; 0x7b0 <main+0x1fc>
				//Thumb Straight
				LCD_voidGotoXY(0,0);
 780:	60 e0       	ldi	r22, 0x00	; 0
 782:	80 e0       	ldi	r24, 0x00	; 0
 784:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 788:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
				LCD_voidWriteString("Good Job");
 78c:	8a e6       	ldi	r24, 0x6A	; 106
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
				LCD_voidGotoXY(1,1);
 794:	61 e0       	ldi	r22, 0x01	; 1
 796:	81 e0       	ldi	r24, 0x01	; 1
 798:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
 79c:	8f ef       	ldi	r24, 0xFF	; 255
 79e:	91 ee       	ldi	r25, 0xE1	; 225
 7a0:	24 e0       	ldi	r18, 0x04	; 4
 7a2:	81 50       	subi	r24, 0x01	; 1
 7a4:	90 40       	sbci	r25, 0x00	; 0
 7a6:	20 40       	sbci	r18, 0x00	; 0
 7a8:	e1 f7       	brne	.-8      	; 0x7a2 <main+0x1ee>
 7aa:	00 c0       	rjmp	.+0      	; 0x7ac <main+0x1f8>
 7ac:	00 00       	nop
 7ae:	34 cf       	rjmp	.-408    	; 0x618 <main+0x64>
				_delay_ms(100);
			}
			else if(Thumb<=2500 && Index>2500 && Middle<=2500 && Ring<=2500 && Pinky>2500 )
 7b0:	c5 3c       	cpi	r28, 0xC5	; 197
 7b2:	89 e0       	ldi	r24, 0x09	; 9
 7b4:	d8 07       	cpc	r29, r24
 7b6:	60 f5       	brcc	.+88     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7b8:	05 3c       	cpi	r16, 0xC5	; 197
 7ba:	99 e0       	ldi	r25, 0x09	; 9
 7bc:	19 07       	cpc	r17, r25
 7be:	40 f1       	brcs	.+80     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7c0:	25 ec       	ldi	r18, 0xC5	; 197
 7c2:	e2 16       	cp	r14, r18
 7c4:	29 e0       	ldi	r18, 0x09	; 9
 7c6:	f2 06       	cpc	r15, r18
 7c8:	18 f5       	brcc	.+70     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7ca:	85 ec       	ldi	r24, 0xC5	; 197
 7cc:	c8 16       	cp	r12, r24
 7ce:	89 e0       	ldi	r24, 0x09	; 9
 7d0:	d8 06       	cpc	r13, r24
 7d2:	f0 f4       	brcc	.+60     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7d4:	65 3c       	cpi	r22, 0xC5	; 197
 7d6:	99 e0       	ldi	r25, 0x09	; 9
 7d8:	79 07       	cpc	r23, r25
 7da:	d0 f0       	brcs	.+52     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
			{
				// Index and Pinky Straight
				LCD_voidGotoXY(0,0);
 7dc:	60 e0       	ldi	r22, 0x00	; 0
 7de:	80 e0       	ldi	r24, 0x00	; 0
 7e0:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 7e4:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
 7e8:	8f e3       	ldi	r24, 0x3F	; 63
 7ea:	9c e9       	ldi	r25, 0x9C	; 156
 7ec:	01 97       	sbiw	r24, 0x01	; 1
 7ee:	f1 f7       	brne	.-4      	; 0x7ec <main+0x238>
 7f0:	00 c0       	rjmp	.+0      	; 0x7f2 <main+0x23e>
 7f2:	00 00       	nop
				_delay_ms(10);
				LCD_voidWriteString("Awesome");
 7f4:	83 e7       	ldi	r24, 0x73	; 115
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
 7fc:	9f ef       	ldi	r25, 0xFF	; 255
 7fe:	21 ee       	ldi	r18, 0xE1	; 225
 800:	84 e0       	ldi	r24, 0x04	; 4
 802:	91 50       	subi	r25, 0x01	; 1
 804:	20 40       	sbci	r18, 0x00	; 0
 806:	80 40       	sbci	r24, 0x00	; 0
 808:	e1 f7       	brne	.-8      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 80a:	00 c0       	rjmp	.+0      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 80c:	00 00       	nop
 80e:	04 cf       	rjmp	.-504    	; 0x618 <main+0x64>
				_delay_ms(100);
			}
			else if(Thumb>2500 && Index>2500 && Middle<=2500 && Ring<=2500 && Pinky>2500 )
 810:	c5 3c       	cpi	r28, 0xC5	; 197
 812:	99 e0       	ldi	r25, 0x09	; 9
 814:	d9 07       	cpc	r29, r25
 816:	60 f1       	brcs	.+88     	; 0x870 <__stack+0x11>
 818:	05 3c       	cpi	r16, 0xC5	; 197
 81a:	29 e0       	ldi	r18, 0x09	; 9
 81c:	12 07       	cpc	r17, r18
 81e:	40 f1       	brcs	.+80     	; 0x870 <__stack+0x11>
 820:	85 ec       	ldi	r24, 0xC5	; 197
 822:	e8 16       	cp	r14, r24
 824:	89 e0       	ldi	r24, 0x09	; 9
 826:	f8 06       	cpc	r15, r24
 828:	18 f5       	brcc	.+70     	; 0x870 <__stack+0x11>
 82a:	95 ec       	ldi	r25, 0xC5	; 197
 82c:	c9 16       	cp	r12, r25
 82e:	99 e0       	ldi	r25, 0x09	; 9
 830:	d9 06       	cpc	r13, r25
 832:	f0 f4       	brcc	.+60     	; 0x870 <__stack+0x11>
 834:	65 3c       	cpi	r22, 0xC5	; 197
 836:	29 e0       	ldi	r18, 0x09	; 9
 838:	72 07       	cpc	r23, r18
 83a:	d0 f0       	brcs	.+52     	; 0x870 <__stack+0x11>
			{
				// Thumb,Index and Pinky Straight
				LCD_voidGotoXY(0,0);
 83c:	60 e0       	ldi	r22, 0x00	; 0
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 844:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
 848:	8f e3       	ldi	r24, 0x3F	; 63
 84a:	9c e9       	ldi	r25, 0x9C	; 156
 84c:	01 97       	sbiw	r24, 0x01	; 1
 84e:	f1 f7       	brne	.-4      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 850:	00 c0       	rjmp	.+0      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 852:	00 00       	nop
				_delay_ms(10);
				LCD_voidWriteString("I love you");
 854:	8b e7       	ldi	r24, 0x7B	; 123
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
 85c:	9f ef       	ldi	r25, 0xFF	; 255
 85e:	21 ee       	ldi	r18, 0xE1	; 225
 860:	84 e0       	ldi	r24, 0x04	; 4
 862:	91 50       	subi	r25, 0x01	; 1
 864:	20 40       	sbci	r18, 0x00	; 0
 866:	80 40       	sbci	r24, 0x00	; 0
 868:	e1 f7       	brne	.-8      	; 0x862 <__stack+0x3>
 86a:	00 c0       	rjmp	.+0      	; 0x86c <__stack+0xd>
 86c:	00 00       	nop
 86e:	d4 ce       	rjmp	.-600    	; 0x618 <main+0x64>
				_delay_ms(100);
			}
			else if(Thumb>2500 && Index>2500 && Middle>2500 && Ring<=2500 && Pinky>2500 )
 870:	c5 3c       	cpi	r28, 0xC5	; 197
 872:	99 e0       	ldi	r25, 0x09	; 9
 874:	d9 07       	cpc	r29, r25
 876:	60 f1       	brcs	.+88     	; 0x8d0 <__stack+0x71>
 878:	05 3c       	cpi	r16, 0xC5	; 197
 87a:	29 e0       	ldi	r18, 0x09	; 9
 87c:	12 07       	cpc	r17, r18
 87e:	40 f1       	brcs	.+80     	; 0x8d0 <__stack+0x71>
 880:	85 ec       	ldi	r24, 0xC5	; 197
 882:	e8 16       	cp	r14, r24
 884:	89 e0       	ldi	r24, 0x09	; 9
 886:	f8 06       	cpc	r15, r24
 888:	18 f1       	brcs	.+70     	; 0x8d0 <__stack+0x71>
 88a:	95 ec       	ldi	r25, 0xC5	; 197
 88c:	c9 16       	cp	r12, r25
 88e:	99 e0       	ldi	r25, 0x09	; 9
 890:	d9 06       	cpc	r13, r25
 892:	f0 f4       	brcc	.+60     	; 0x8d0 <__stack+0x71>
 894:	65 3c       	cpi	r22, 0xC5	; 197
 896:	29 e0       	ldi	r18, 0x09	; 9
 898:	72 07       	cpc	r23, r18
 89a:	d0 f0       	brcs	.+52     	; 0x8d0 <__stack+0x71>
			{
				// Thumb,Index,middle and Pinky Straight
				LCD_voidGotoXY(0,0);
 89c:	60 e0       	ldi	r22, 0x00	; 0
 89e:	80 e0       	ldi	r24, 0x00	; 0
 8a0:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 8a4:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
 8a8:	8f e3       	ldi	r24, 0x3F	; 63
 8aa:	9c e9       	ldi	r25, 0x9C	; 156
 8ac:	01 97       	sbiw	r24, 0x01	; 1
 8ae:	f1 f7       	brne	.-4      	; 0x8ac <__stack+0x4d>
 8b0:	00 c0       	rjmp	.+0      	; 0x8b2 <__stack+0x53>
 8b2:	00 00       	nop
				_delay_ms(10);
				LCD_voidWriteString("I love you alot");
 8b4:	86 e8       	ldi	r24, 0x86	; 134
 8b6:	90 e0       	ldi	r25, 0x00	; 0
 8b8:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
 8bc:	9f ef       	ldi	r25, 0xFF	; 255
 8be:	21 ee       	ldi	r18, 0xE1	; 225
 8c0:	84 e0       	ldi	r24, 0x04	; 4
 8c2:	91 50       	subi	r25, 0x01	; 1
 8c4:	20 40       	sbci	r18, 0x00	; 0
 8c6:	80 40       	sbci	r24, 0x00	; 0
 8c8:	e1 f7       	brne	.-8      	; 0x8c2 <__stack+0x63>
 8ca:	00 c0       	rjmp	.+0      	; 0x8cc <__stack+0x6d>
 8cc:	00 00       	nop
 8ce:	a4 ce       	rjmp	.-696    	; 0x618 <main+0x64>
				_delay_ms(100);
			}
			else if(Thumb<=2500 && Index>2500 && Middle>2500 && Ring<=2500 && Pinky<=2500 ){
 8d0:	c5 3c       	cpi	r28, 0xC5	; 197
 8d2:	99 e0       	ldi	r25, 0x09	; 9
 8d4:	d9 07       	cpc	r29, r25
 8d6:	50 f5       	brcc	.+84     	; 0x92c <__stack+0xcd>
 8d8:	05 3c       	cpi	r16, 0xC5	; 197
 8da:	29 e0       	ldi	r18, 0x09	; 9
 8dc:	12 07       	cpc	r17, r18
 8de:	30 f1       	brcs	.+76     	; 0x92c <__stack+0xcd>
 8e0:	85 ec       	ldi	r24, 0xC5	; 197
 8e2:	e8 16       	cp	r14, r24
 8e4:	89 e0       	ldi	r24, 0x09	; 9
 8e6:	f8 06       	cpc	r15, r24
 8e8:	08 f1       	brcs	.+66     	; 0x92c <__stack+0xcd>
 8ea:	95 ec       	ldi	r25, 0xC5	; 197
 8ec:	c9 16       	cp	r12, r25
 8ee:	99 e0       	ldi	r25, 0x09	; 9
 8f0:	d9 06       	cpc	r13, r25
 8f2:	e0 f4       	brcc	.+56     	; 0x92c <__stack+0xcd>
 8f4:	65 3c       	cpi	r22, 0xC5	; 197
 8f6:	29 e0       	ldi	r18, 0x09	; 9
 8f8:	72 07       	cpc	r23, r18
 8fa:	c0 f4       	brcc	.+48     	; 0x92c <__stack+0xcd>
				//Thumb Straight
				LCD_voidGotoXY(0,0);
 8fc:	60 e0       	ldi	r22, 0x00	; 0
 8fe:	80 e0       	ldi	r24, 0x00	; 0
 900:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 904:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
				LCD_voidWriteString("I see you");
 908:	86 e9       	ldi	r24, 0x96	; 150
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
				LCD_voidGotoXY(1,1);
 910:	61 e0       	ldi	r22, 0x01	; 1
 912:	81 e0       	ldi	r24, 0x01	; 1
 914:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
 918:	8f ef       	ldi	r24, 0xFF	; 255
 91a:	91 ee       	ldi	r25, 0xE1	; 225
 91c:	24 e0       	ldi	r18, 0x04	; 4
 91e:	81 50       	subi	r24, 0x01	; 1
 920:	90 40       	sbci	r25, 0x00	; 0
 922:	20 40       	sbci	r18, 0x00	; 0
 924:	e1 f7       	brne	.-8      	; 0x91e <__stack+0xbf>
 926:	00 c0       	rjmp	.+0      	; 0x928 <__stack+0xc9>
 928:	00 00       	nop
 92a:	76 ce       	rjmp	.-788    	; 0x618 <main+0x64>
				_delay_ms(100);
			}
			else if(Thumb<=2500 && Index>2500 && Middle<=2500 && Ring<=2500 && Pinky<=2500 ){
 92c:	c5 3c       	cpi	r28, 0xC5	; 197
 92e:	d9 40       	sbci	r29, 0x09	; 9
 930:	08 f0       	brcs	.+2      	; 0x934 <__stack+0xd5>
 932:	72 ce       	rjmp	.-796    	; 0x618 <main+0x64>
 934:	05 3c       	cpi	r16, 0xC5	; 197
 936:	19 40       	sbci	r17, 0x09	; 9
 938:	08 f4       	brcc	.+2      	; 0x93c <__stack+0xdd>
 93a:	6e ce       	rjmp	.-804    	; 0x618 <main+0x64>
 93c:	25 ec       	ldi	r18, 0xC5	; 197
 93e:	e2 16       	cp	r14, r18
 940:	29 e0       	ldi	r18, 0x09	; 9
 942:	f2 06       	cpc	r15, r18
 944:	08 f0       	brcs	.+2      	; 0x948 <__stack+0xe9>
 946:	68 ce       	rjmp	.-816    	; 0x618 <main+0x64>
 948:	85 ec       	ldi	r24, 0xC5	; 197
 94a:	c8 16       	cp	r12, r24
 94c:	89 e0       	ldi	r24, 0x09	; 9
 94e:	d8 06       	cpc	r13, r24
 950:	08 f0       	brcs	.+2      	; 0x954 <__stack+0xf5>
 952:	62 ce       	rjmp	.-828    	; 0x618 <main+0x64>
 954:	65 3c       	cpi	r22, 0xC5	; 197
 956:	79 40       	sbci	r23, 0x09	; 9
 958:	08 f0       	brcs	.+2      	; 0x95c <__stack+0xfd>
 95a:	5e ce       	rjmp	.-836    	; 0x618 <main+0x64>
				//Thumb Straight
				LCD_voidGotoXY(0,0);
 95c:	60 e0       	ldi	r22, 0x00	; 0
 95e:	80 e0       	ldi	r24, 0x00	; 0
 960:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
				LCD_voidLCDClear();
 964:	0e 94 c8 02 	call	0x590	; 0x590 <LCD_voidLCDClear>
				LCD_voidWriteString("You");
 968:	80 ea       	ldi	r24, 0xA0	; 160
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 af 02 	call	0x55e	; 0x55e <LCD_voidWriteString>
				LCD_voidGotoXY(1,1);
 970:	61 e0       	ldi	r22, 0x01	; 1
 972:	81 e0       	ldi	r24, 0x01	; 1
 974:	0e 94 cc 02 	call	0x598	; 0x598 <LCD_voidGotoXY>
 978:	2f ef       	ldi	r18, 0xFF	; 255
 97a:	81 ee       	ldi	r24, 0xE1	; 225
 97c:	94 e0       	ldi	r25, 0x04	; 4
 97e:	21 50       	subi	r18, 0x01	; 1
 980:	80 40       	sbci	r24, 0x00	; 0
 982:	90 40       	sbci	r25, 0x00	; 0
 984:	e1 f7       	brne	.-8      	; 0x97e <__stack+0x11f>
 986:	00 c0       	rjmp	.+0      	; 0x988 <__stack+0x129>
 988:	00 00       	nop
 98a:	46 ce       	rjmp	.-884    	; 0x618 <main+0x64>

0000098c <__tablejump2__>:
 98c:	ee 0f       	add	r30, r30
 98e:	ff 1f       	adc	r31, r31
 990:	05 90       	lpm	r0, Z+
 992:	f4 91       	lpm	r31, Z
 994:	e0 2d       	mov	r30, r0
 996:	09 94       	ijmp

00000998 <__umulhisi3>:
 998:	a2 9f       	mul	r26, r18
 99a:	b0 01       	movw	r22, r0
 99c:	b3 9f       	mul	r27, r19
 99e:	c0 01       	movw	r24, r0
 9a0:	a3 9f       	mul	r26, r19
 9a2:	70 0d       	add	r23, r0
 9a4:	81 1d       	adc	r24, r1
 9a6:	11 24       	eor	r1, r1
 9a8:	91 1d       	adc	r25, r1
 9aa:	b2 9f       	mul	r27, r18
 9ac:	70 0d       	add	r23, r0
 9ae:	81 1d       	adc	r24, r1
 9b0:	11 24       	eor	r1, r1
 9b2:	91 1d       	adc	r25, r1
 9b4:	08 95       	ret

000009b6 <_exit>:
 9b6:	f8 94       	cli

000009b8 <__stop_program>:
 9b8:	ff cf       	rjmp	.-2      	; 0x9b8 <__stop_program>
